@model FIT5032_Assignment.Models.CTMachine

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create CT Machine</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*User @Html.EditorFor and @Html.ValidationMessageFor to encode the output to prevent XSS*@
    <div class="form-group" id="Name">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    @*Check whether name is empty*@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var form = document.querySelector("form");
            form.addEventListener("submit", function (e) {
                var nameInput = document.querySelector("[name='Name']");
                if (nameInput.value === "") {
                    e.preventDefault();
                    alert("Name cannot be empty");
                }
            });
        });
    </script>


    <div class="form-group" id="Description">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    @*Check whteher description is empty*@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var form = document.querySelector("form");
            form.addEventListener("submit", function (e) {
                var descriptionInput = document.querySelector("[name='Description']");
                if (descriptionInput.value.trim() === "") {
                    e.preventDefault();
                    alert("Description cannot be empty");
                }
            });
        });
    </script>

    <div class="form-group" id="Status">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>
    @*Check whether status is empty*@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var form = document.querySelector("form");
            form.addEventListener("submit", function (e) {
                var descriptionInput = document.querySelector("[name='Status']");
                if (descriptionInput.value.trim() === "") {
                    e.preventDefault();
                    alert("Status cannot be empty");
                }
            });
        });
    </script>

    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "CTMachineManagement")
</div>
